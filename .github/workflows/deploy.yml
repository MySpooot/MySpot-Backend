name: MySpot API Push and Deploy

on:
    push:
        branches:
            - master
            - dev

jobs:
    Build_Deploy:
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout Branch
              uses: actions/checkout@v2

            - name: Inject slug/short variables
              uses: rlespinasse/github-slug-action@v3.x

            - name: Install NodeJS
              uses: actions/setup-node@v1
              with:
                  node-version: 14

            - name: Cache node_modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.OS }}-build-
                      ${{ runner.OS }}-

            - name: Install Packages
              run: yarn install

            - name: Build and Deploy - DEV
              if: github.ref == 'refs/heads/dev'
              env:
                  CI: false
                  JWT_SECRET: ${{ secrets.JWT_SECRET }}
                  POSTGRES_USERNAME: ${{ secrets.POSTGRES_USERNAME }}
                  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
                  POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
                  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
                  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              run: |
                  yarn deploy:dev

            - name: Build and Deploy - PROD
              if: github.ref == 'refs/heads/master'
              env:
                  CI: false
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              run: |
                  yarn deploy:prod
